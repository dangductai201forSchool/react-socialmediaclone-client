{"ast":null,"code":"import _classCallCheck from \"/home/tai_ubuntu/classsed-react-firebase-client/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/home/tai_ubuntu/classsed-react-firebase-client/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/home/tai_ubuntu/classsed-react-firebase-client/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/home/tai_ubuntu/classsed-react-firebase-client/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/home/tai_ubuntu/classsed-react-firebase-client/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/home/tai_ubuntu/classsed-react-firebase-client/src/components/Chat.js\";\nimport React, { Component } from 'react';\nimport '../App.css';\nimport { Client } from '@stomp/stompjs';\n\nvar Chat =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(Chat, _Component);\n\n  function Chat() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, Chat);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(Chat)).call.apply(_getPrototypeOf2, [this].concat(args)));\n    _this.state = {\n      serverTime: null\n    };\n\n    _this.clickHandler = function () {\n      _this.client.publish({\n        destination: '/app/greetings',\n        body: 'Hello world'\n      });\n    };\n\n    return _this;\n  }\n\n  _createClass(Chat, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var _this2 = this;\n\n      this.client = new Client();\n      this.client.configure({\n        brokerURL: 'ws//localhost:8080/stomp',\n        onConnect: function onConnect() {\n          _this2.client.subscribe('/queue/now', function (message) {\n            _this2.setState({\n              serverTime: message.body\n            });\n          });\n        },\n        debug: function debug(str) {\n          console.log(new Date(), str);\n        }\n      });\n      this.client.activate();\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      return React.createElement(\"div\", {\n        className: \"chat-container\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 34\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"chat-header\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 35\n        },\n        __self: this\n      }, React.createElement(\"h1\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 36\n        },\n        __self: this\n      }, \"Messager\")), React.createElement(\"hr\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 38\n        },\n        __self: this\n      }), React.createElement(\"div\", {\n        className: \"connecting\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 39\n        },\n        __self: this\n      }, \"...\"), React.createElement(\"div\", {\n        className: \"chat-main\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 40\n        },\n        __self: this\n      }, React.createElement(\"ul\", {\n        className: \"message-area\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 41\n        },\n        __self: this\n      }), React.createElement(\"form\", {\n        className: \"message-form\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 42\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"input-message\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 43\n        },\n        __self: this\n      }, React.createElement(\"input\", {\n        className: \"message\",\n        type: \"text\",\n        autoComplete: \"off\",\n        placeholder: \"Type message\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 44\n        },\n        __self: this\n      }), React.createElement(\"button\", {\n        color: \"#e1306c\",\n        onClick: this.clickHandler,\n        type: \"submit\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 45\n        },\n        __self: this\n      }, \"Send\")))));\n    }\n  }]);\n\n  return Chat;\n}(Component);\n\nexport default Chat;","map":{"version":3,"sources":["/home/tai_ubuntu/classsed-react-firebase-client/src/components/Chat.js"],"names":["React","Component","Client","Chat","state","serverTime","clickHandler","client","publish","destination","body","configure","brokerURL","onConnect","subscribe","message","setState","debug","str","console","log","Date","activate"],"mappings":";;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAO,YAAP;AACA,SAASC,MAAT,QAAuB,gBAAvB;;IAGMC,I;;;;;;;;;;;;;;;;;UACJC,K,GAAM;AACJC,MAAAA,UAAU,EAAC;AADP,K;;UAqBNC,Y,GAAe,YAAM;AACnB,YAAKC,MAAL,CAAYC,OAAZ,CAAoB;AAACC,QAAAA,WAAW,EAAE,gBAAd;AAAgCC,QAAAA,IAAI,EAAE;AAAtC,OAApB;AACD,K;;;;;;;wCAnBkB;AAAA;;AACjB,WAAKH,MAAL,GAAa,IAAIL,MAAJ,EAAb;AAEA,WAAKK,MAAL,CAAYI,SAAZ,CAAsB;AACpBC,QAAAA,SAAS,EAAC,0BADU;AAEpBC,QAAAA,SAAS,EAAC,qBAAI;AACZ,UAAA,MAAI,CAACN,MAAL,CAAYO,SAAZ,CAAsB,YAAtB,EAAoC,UAAAC,OAAO,EAAE;AAC3C,YAAA,MAAI,CAACC,QAAL,CAAc;AAACX,cAAAA,UAAU,EAACU,OAAO,CAACL;AAApB,aAAd;AACD,WAFD;AAGD,SANmB;AAOpBO,QAAAA,KAAK,EAAC,eAACC,GAAD,EAAO;AACXC,UAAAA,OAAO,CAACC,GAAR,CAAY,IAAIC,IAAJ,EAAZ,EAAqBH,GAArB;AACD;AATmB,OAAtB;AAWA,WAAKX,MAAL,CAAYe,QAAZ;AACD;;;6BAMQ;AACP,aACI;AAAK,QAAA,SAAS,EAAC,gBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACA;AAAK,QAAA,SAAS,EAAC,aAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBADF,CADA,EAIA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAJA,EAKA;AAAK,QAAA,SAAS,EAAC,YAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eALA,EAMA;AAAK,QAAA,SAAS,EAAC,WAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE;AAAI,QAAA,SAAS,EAAC,cAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADF,EAEE;AAAM,QAAA,SAAS,EAAC,cAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE;AAAK,QAAA,SAAS,EAAC,eAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE;AAAO,QAAA,SAAS,EAAC,SAAjB;AAA2B,QAAA,IAAI,EAAC,MAAhC;AAAuC,QAAA,YAAY,EAAC,KAApD;AAA0D,QAAA,WAAW,EAAC,cAAtE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADF,EAEE;AAAQ,QAAA,KAAK,EAAC,SAAd;AAAwB,QAAA,OAAO,EAAE,KAAKhB,YAAtC;AAAoD,QAAA,IAAI,EAAC,QAAzD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAFF,CADF,CAFF,CANA,CADJ;AAkBD;;;;EA7CgBL,S;;AAgDnB,eAAeE,IAAf","sourcesContent":["import React, { Component } from 'react';\nimport '../App.css';\nimport { Client } from '@stomp/stompjs';\n\n\nclass Chat extends Component {\n  state={\n    serverTime:null\n  }\n\n  componentDidMount(){\n    this.client =new Client();\n\n    this.client.configure({\n      brokerURL:'ws//localhost:8080/stomp',\n      onConnect:()=>{\n        this.client.subscribe('/queue/now', message=>{\n          this.setState({serverTime:message.body});\n        });\n      },\n      debug:(str)=>{\n        console.log(new Date,str);\n      }\n    });\n    this.client.activate();\n  }\n\n  clickHandler = () => {\n    this.client.publish({destination: '/app/greetings', body: 'Hello world'});\n  }\n\n  render() {\n    return (\n        <div className=\"chat-container\">\n        <div className=\"chat-header\">\n          <h1>Messager</h1>\n        </div>\n        <hr/>\n        <div className=\"connecting\">...</div>\n        <div className=\"chat-main\">\n          <ul className=\"message-area\"></ul>\n          <form className=\"message-form\">\n            <div className=\"input-message\">\n              <input className=\"message\" type=\"text\" autoComplete=\"off\" placeholder=\"Type message\"/>\n              <button color=\"#e1306c\" onClick={this.clickHandler} type=\"submit\">Send</button>\n            </div>\n          </form>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default Chat;\n"]},"metadata":{},"sourceType":"module"}